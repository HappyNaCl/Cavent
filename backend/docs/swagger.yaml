basePath: /api/v1
definitions:
  common.BriefUserResult:
    properties:
      avatarUrl:
        type: string
      campusId:
        type: string
      email:
        type: string
      firstTimeLogin:
        type: boolean
      id:
        type: string
      name:
        type: string
      provider:
        type: string
      role:
        type: string
    type: object
  request.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
      rememberMe:
        type: boolean
    required:
    - email
    - password
    type: object
  request.RegisterRequest:
    properties:
      confirmPassword:
        type: string
      email:
        type: string
      inviteCode:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - confirmPassword
    - email
    - name
    - password
    type: object
  response.CheckMeResponse:
    properties:
      user:
        $ref: '#/definitions/common.BriefUserResult'
    type: object
  response.LoginResponse:
    properties:
      accessToken:
        type: string
      user:
        $ref: '#/definitions/common.BriefUserResult'
    type: object
  response.RefreshResponse:
    properties:
      accessToken:
        type: string
    type: object
  response.RegisterResponse:
    properties:
      accessToken:
        type: string
      user:
        $ref: '#/definitions/common.BriefUserResult'
    type: object
  types.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  types.SuccessResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the Cavent backend API documentation.
  title: Cavent API
  version: "1.0"
paths:
  /auth/{provider}:
    get:
      consumes:
      - application/json
      description: Login a user with OAuth provider
      parameters:
      - description: OAuth Provider
        enum:
        - google
        - github
        - etc.
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Redirects to OAuth provider for authentication
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Login a user with OAuth
      tags:
      - auth
  /auth/{provider}/callback:
    get:
      consumes:
      - application/json
      description: Handle OAuth callback after user authentication
      parameters:
      - description: OAuth Provider
        enum:
        - google
        - github
        - etc.
        in: path
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "302":
          description: Redirects to frontend with access token as query parameter
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: OAuth Callback
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: Login Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /auth/logout:
    get:
      consumes:
      - application/json
      description: Logout user by clearing the refresh token cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.SuccessResponse'
            - properties:
                data: {}
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Logout user
      tags:
      - auth
  /auth/me:
    get:
      consumes:
      - application/json
      description: Get the current user's information
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.CheckMeResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Check current user
      tags:
      - auth
  /auth/refresh:
    get:
      consumes:
      - application/json
      description: Refresh the access token using the refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.RefreshResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Refresh access token
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with name, email, and password
      parameters:
      - description: Register Request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/request.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/types.SuccessResponse'
            - properties:
                data:
                  $ref: '#/definitions/response.RegisterResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/types.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/types.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
swagger: "2.0"
